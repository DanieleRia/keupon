<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  	<head>
	    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<!--<script src="/javascripts/cufon-yui.js" type="text/javascript"></script>
        <script src="/javascripts/Knockout_500.font.js" type="text/javascript"></script>
	    <script type="text/javascript">
            Cufon.replace('.addFont', {
                fontFamily: 'Knockout'
            });
        </script>-->
		<%= stylesheet_link_tag 'redbox' %>
		<%= javascript_include_tag 'redbox' %>
		<%= stylesheet_link_tag 'stylesheet' %>
        <%= javascript_include_tag 'creditcard' %>
        <script src="/javascripts/application.js" type="text/javascript"></script>
        <script src="/javascripts/prototype.js" type="text/javascript"></script>
        <script src="/javascripts/effects.js" type="text/javascript"></script>
        <script src="/javascripts/controls.js" type="text/javascript"></script>
        <script type="text/javascript" src="/javascripts/location_deal_slider/jquery-1-3-2-min.js"></script>
        <% CalendarDateSelect.format = :italian %>
        <%= calendar_date_select_includes "red" %>
        <script src="/javascripts/FusionMaps.js" type="text/javascript"></script>
        <script src="/javascripts/FusionCharts.js" type="text/javascript"></script>
        <script src="/javascripts/protoplus.js?v=3.1.3" type="text/javascript"></script>
        <script src="/javascripts/jotform.js?v=3.1.3" type="text/javascript"></script>
        <script type="text/javascript" src="/recent/jcarousellite.js"></script>
        <script type="text/javascript" src="/recent/easing.js"></script>
        <script type="text/javascript" src="/recent/superfish.js"></script>
        <script type="text/javascript" src="/recent/jquery.prettyphoto.js"></script>
        <script type="text/javascript">
            var jquery = jQuery.noConflict();
        </script>
        <!--<link href="/stylesheets/charts/style.css" media="screen" rel="stylesheet" type="text/css" />-->
        <link href="/stylesheets/dhtmltooltip.css" media="screen" rel="stylesheet" type="text/css" />
        <script type="text/javascript">
            jquery(document).ready(function(){
                jquery("ul.sf-menu").superfish({
                    animation: {
                        height: 'show'
                    }, // slide-down effect without fade-in
                    delay: 200 // 1.2 second delay on mouseout
                });
            });
        </script>
        <script type="text/javascript">
            jquery(function(){
                jquery(".sliderImages").jCarouselLite({
                    btnNext: ".next",
                    btnPrev: ".prev",
                    visible: 3,
                    easing: "easeinout",
                    auto: 3000,
                    speed: 1000
                });
            });
        </script>
        <script>
            setTimeout(function(){
                jquery('#mydiv').fadeOut('slow');
            }, 10000); // <-- time in milliseconds
        </script>
        <script type="text/javascript">
            function getCookie(c_name){
                var i, x, y, ARRcookies = document.cookie.split(";");
                for (i = 0; i < ARRcookies.length; i++) {
                    x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
                    y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
                    x = x.replace(/^\s+|\s+$/g, "");
                    if (x == c_name) {
                        return unescape(y);
                    }
                }
            }
            function setCookie(c_name, value, exdays){
                var exdate = new Date();
                exdate.setDate(exdate.getDate() + exdays);
                var c_value = escape(value) + ((exdays == null) ? "" : "; expires=" + exdate.toUTCString());
                document.cookie = c_name + "=" + c_value;
            }
            function checkCookie(){
                var username = getCookie("username");
                if (username != null && username != "") {}
                else {
                    createsubscription('first_time_popup');
                    username = 'keupons';
                    if (username != null && username != "") {
                        setCookie("username", username, 365);
                    }
                }
            }
        </script>
        <script type="text/javascript">
            
            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA-24339162-1']);
            _gaq.push(['_trackPageview']);
            (function(){
                var ga = document.createElement('script');
                ga.type = 'text/javascript';
                ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(ga, s);
            })();
        </script>
		<script>
			<!--
			function wopen(url, name, w, h)
			{
			  // Fudge factors for window decoration space.
			  // In my tests these work well on all platforms & browsers.
			  w += 32;
			  h += 96;
			  wleft = (screen.width - w) / 2;
			  wtop = (screen.height - h) / 2;
			  // IE5 and other old browsers might allow a window that is
			  // partially offscreen or wider than the screen. Fix that.
			  // (Newer browsers fix this for us, but let's be thorough.)
			  if (wleft < 0) {
			    w = screen.width;
			    wleft = 0;
			  }
			  if (wtop < 0) {
			    h = screen.height;
			    wtop = 0;
			  }
			  var win = window.open(url,
			    name,
			    'width=' + w + ', height=' + h + ', ' +
			    'left=' + wleft + ', top=' + wtop + ', ' +
			    'location=no, menubar=no,addressbar=no,location=no, ' +
			    'status=no, toolbar=no, scrollbars=no, resizable=no');
			  // Just in case width and height are ignored
			  win.resizeTo(w, h);
			  // Just in case left and top are ignored
			  win.moveTo(wleft, wtop);
			  win.focus();
			}
			// -->
			</script>
			<script Language="JavaScript">
			    <!--
			    function sform_validator(){
			        var theForm = document.forms['new_keupon_subscribers'];
			        
			        return emailCheck(theForm.keupon_subscribers_email.value);
			    }
			    
			    function emailCheck(emailStr){
			    
			        /* The following variable tells the rest of the function whether or not
			         to verify that the address ends in a two-letter country or well-known
			         TLD.  1 means check it, 0 means don't. */
			        var checkTLD = 1;
			        
			        /* The following is the list of known TLDs that an e-mail address must end with. */
			        
			        var knownDomsPat = /^(com|net|org|edu|int|mil|gov|arpa|biz|aero|name|coop|info|pro|museum)$/;
			        
			        /* The following pattern is used to check if the entered e-mail address
			         fits the user@domain format.  It also is used to separate the username
			         from the domain. */
			        var emailPat = /^(.+)@(.+)$/;
			        
			        /* The following string represents the pattern for matching all special
			         characters.  We don't want to allow special characters in the address.
			         These characters include ( ) < > @ , ; : \ " . [ ] */
			        var specialChars = "\\(\\)><@,;:\\\\\\\"\\.\\[\\]";
			        
			        /* The following string represents the range of characters allowed in a
			         username or domainname.  It really states which chars aren't allowed.*/
			        var validChars = "\[^\\s" + specialChars + "\]";
			        
			        /* The following pattern applies if the "user" is a quoted string (in
			         which case, there are no rules about which characters are allowed
			         and which aren't; anything goes).  E.g. "jiminy cricket"@disney.com
			         is a legal e-mail address. */
			        var quotedUser = "(\"[^\"]*\")";
			        
			        /* The following pattern applies for domains that are IP addresses,
			         rather than symbolic names.  E.g. joe@[123.124.233.4] is a legal
			         e-mail address. NOTE: The square brackets are required. */
			        var ipDomainPat = /^\[(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})\]$/;
			        
			        /* The following string represents an atom (basically a series of non-special characters.) */
			        
			        var atom = validChars + '+';
			        
			        /* The following string represents one word in the typical username.
			         For example, in john.doe@somewhere.com, john and doe are words.
			         Basically, a word is either an atom or quoted string. */
			        var word = "(" + atom + "|" + quotedUser + ")";
			        
			        // The following pattern describes the structure of the user
			        
			        var userPat = new RegExp("^" + word + "(\\." + word + ")*$");
			        
			        /* The following pattern describes the structure of a normal symbolic
			         domain, as opposed to ipDomainPat, shown above. */
			        var domainPat = new RegExp("^" + atom + "(\\." + atom + ")*$");
			        
			        /* Finally, let's start trying to figure out if the supplied address is valid. */
			        
			        /* Begin with the coarse pattern to simply break up user@domain into
			         different pieces that are easy to analyze. */
			        var matchArray = emailStr.match(emailPat);
			        
			        if (matchArray == null) {
			        
			            /* Too many/few @'s or something; basically, this address doesn't
			             even fit the general mould of a valid e-mail address. */
			            alert("Email address seems incorrect (check @ and .'s)");
			            return false;
			        }
			        var user = matchArray[1];
			        var domain = matchArray[2];
			        
			        // Start by checking that only basic ASCII characters are in the strings (0-127).
			        
			        for (i = 0; i < user.length; i++) {
			            if (user.charCodeAt(i) > 127) {
			                alert("Ths username contains invalid characters.");
			                return false;
			            }
			        }
			        for (i = 0; i < domain.length; i++) {
			            if (domain.charCodeAt(i) > 127) {
			                alert("Ths domain name contains invalid characters.");
			                return false;
			            }
			        }
			        
			        // See if "user" is valid
			        
			        if (user.match(userPat) == null) {
			        
			            // user is not valid
			            
			            alert("The username doesn't seem to be valid.");
			            return false;
			        }
			        
			        /* if the e-mail address is at an IP address (as opposed to a symbolic
			         host name) make sure the IP address is valid. */
			        var IPArray = domain.match(ipDomainPat);
			        if (IPArray != null) {
			        
			            // this is an IP address
			            
			            for (var i = 1; i <= 4; i++) {
			                if (IPArray[i] > 255) {
			                    alert("Destination IP address is invalid!");
			                    return false;
			                }
			            }
			            return true;
			        }
			        
			        // Domain is symbolic name.  Check if it's valid.
			        
			        var atomPat = new RegExp("^" + atom + "$");
			        var domArr = domain.split(".");
			        var len = domArr.length;
			        for (i = 0; i < len; i++) {
			            if (domArr[i].search(atomPat) == -1) {
			                alert("The domain name does not seem to be valid.");
			                return false;
			            }
			        }
			        
			        /* domain name seems valid, but now make sure that it ends in a
			         known top-level domain (like com, edu, gov) or a two-letter word,
			         representing country (uk, nl), and that there's a hostname preceding
			         the domain or country. */
			        if (checkTLD && domArr[domArr.length - 1].length != 2 &&
			        domArr[domArr.length - 1].search(knownDomsPat) == -1) {
			            alert("The address must end in a well-known domain or two letter " + "country.");
			            return false;
			        }
			        
			        // Make sure there's a host name preceding the domain.
			        
			        if (len < 2) {
			            alert("This address is missing a hostname!");
			            return false;
			        }
			        
			        // If we've gotten this far, everything's valid!
			        return true;
			    }
			    
			    //-->
			</script>
	    <title>Keupons</title>
	</head>
    <body>
        <div class="wrapper">
            <div class="header">
                <%= render :partial => "/layouts/header" %>
            </div>
			<% if flash[:notice] %>
			<div style="text-align:center;background:#ddd;">
				<%= flash[:notice] %>
			</div>
			<% end %>
            <div class="mid_body">
                <%= yield %>
            </div>
            <div class="footer_main">
                <%= render :partial => "/layouts/footer"%>
            </div>
		 	<div class="footer">
            	Copyright © 2010 www.keupons.com. All Rights Reserved
            </div>
        </div>
    </body>
</html>